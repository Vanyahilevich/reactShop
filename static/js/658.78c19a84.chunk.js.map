{"version":3,"file":"static/js/658.78c19a84.chunk.js","mappings":"qJAkBA,IAfuB,SAAHA,GAAsD,IAAjDC,EAASD,EAATC,UAAWC,EAAKF,EAALE,MAAOC,EAAOH,EAAPG,QAASC,EAAKJ,EAALI,MAAOC,EAAQL,EAARK,SACzD,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,UAAWP,EAAWQ,UAAU,OAAOC,GAAIR,EAAMS,MAAOC,cAAY,EAACC,eAAa,EAAAC,UACvFC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJC,SAAS,QACTd,QAASA,EAAQW,SAAA,EACjBR,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAAAJ,SACRV,IAEFC,MAIT,C,kECbMc,EAAYC,EAAAA,MAAW,SAACC,GAC5B,IAAOC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,OACpB,OACElB,EAAAA,EAAAA,KAACmB,EAAAA,GAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJL,GAAK,IACTC,MAAOA,EACPC,KAAMA,EACNI,MAAOH,EAAOI,OAAOL,GACrBM,SAAUL,EAAOM,aACjBC,OAAQP,EAAOQ,WACfrB,MAAOa,EAAOS,QAAQV,MAAWC,EAAOU,OAAOX,GAC/CY,WAAYX,EAAOS,QAAQV,IAASC,EAAOU,OAAOX,GAClDa,OAAO,WAIb,IAEA,K,4KCnBA,EAAeC,EAAAA,GAAW,CAExBC,MAAOD,EAAAA,GACG,oBACPC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,KAEPI,IAAI,EAAG,kOACPC,QAAQ,WAAY,kOACpBA,QAAQ,QAAS,kOACjBH,SAAS,uLCZd,EAAgC,kC,sCCgChC,EA7B2B,SAAClB,GAC1B,IAAMsB,EAAW,2EACXC,EAAiB,SAACC,GACtBC,QAAQC,IAAIF,EAASG,YACrB,IAAAC,EAAyBJ,EAASG,WAA3BV,EAAKW,EAALX,MAAOY,EAAQD,EAARC,SACd7B,EAAM8B,gBAAgBb,EAAOY,EAC/B,EAWA,OATAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAKC,KAAK,gBAAgB,WACxBD,EAAAA,GAAKE,OAAOC,KAAK,CACfb,SAAUA,EACVc,MAAO,IAEX,GACF,KAGEnD,EAAAA,EAAAA,KAACoD,EAAAA,YAAW,CACVlD,UAAWmD,EAAAA,EAAGC,IACdjB,SAAUA,EACVkB,WAAYxC,EAAMjB,MAClB0D,UAAWlB,EACXmB,UAAWnB,EACXoB,aAAc,sBAGpB,ECiCA,EAxDmB,SAAHhE,GAA2B,IAAtBiE,EAAQjE,EAARiE,SAAU/D,EAAKF,EAALE,MAEvBsB,GAAS0C,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACb7B,MAAO,GACPE,SAAU,IAEZ4B,gBAAgB,EAChBC,kBAAkB,EAClBC,iBAAkBC,EAClBN,SAAUA,IAQZ,OACElD,EAAAA,EAAAA,MAAA,QAAMP,UAAWmD,EAAkBM,SAAUzC,EAAOgD,aAAa1D,SAAA,EAC/DR,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CACRI,KAAK,QACLD,MAAM,QACNE,OAAQA,EACRiD,WAAS,KAEXnE,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CACRI,KAAK,WACLD,MAAM,WACNE,OAAQA,EACRkD,KAAK,WACLD,WAAS,KAEXnE,EAAAA,EAAAA,KAACqE,EAAAA,EAAM,CACLC,MAAM,UACNC,QAAQ,YACRJ,WAAS,EACTK,MAAO,CAAC1C,OAAQ,eAChBsC,KAAK,SACLK,SAAU7E,EAAM8E,QAChBC,QACE/E,EAAM8E,SACF1E,EAAAA,EAAAA,KAAC4E,EAAAA,EAAgB,CACjBN,MAAM,UAAUO,KAAK,OAAOL,MAAO,CAACM,QAAS,cAC7C,KAAKtE,SAEZ,YAIDR,EAAAA,EAAAA,KAAC+E,EAAkB,CAAClC,gBAtCA,SAACb,GACvBd,EAAO2C,cAAc7B,MAAQA,EAC7Bd,EAAO8D,eAET,EAkC0DlF,MAAO,0BAInE,EC7DA,EAAwB,sBAAxB,EAAsD,sBAAtD,EAAoF,sB,8CC6DpF,EArDmB,WACjB,IAAMmF,GAAWC,EAAAA,EAAAA,MACjBC,GAA4BC,EAAAA,EAAAA,UAAS,CACnC/E,OAAO,EACPqE,SAAS,EACTW,MAAM,IACNC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAJKK,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAQlBI,GAAWC,EAAAA,EAAAA,MACXhC,EAAQ,eAAAjE,GAAAkG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOzE,GAAM,IAAAiB,EAAAyD,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGW,OAHXF,EAAAC,KAAA,EAE1B3D,QAAQC,IAAInB,GACZmE,GAASrE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGoE,GAAM,IAAEd,SAAS,KAAMwB,EAAAE,KAAA,EACdC,MAAM,mBAAoB,CAC/CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUpF,KACrB,OANY,OAARiB,EAAQ2D,EAAAS,KAAAT,EAAAE,KAAA,EAOK7D,EAASqE,OAAM,OAEI,GAFhCZ,EAAIE,EAAAS,KACVnE,QAAQC,IAAIuD,GACZP,GAASrE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGoE,GAAM,IAAEd,SAAS,MAC3BsB,EAAK3F,MAAM,CAAD6F,EAAAE,KAAA,SAC6B,OAAzCX,GAASrE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGoE,GAAM,IAAEnF,MAAO2F,EAAK3F,SAAO6F,EAAAW,OAAA,kBAG3C5B,GAAS6B,EAAAA,EAAAA,IAAOd,IAChBN,EAAS,KAAIQ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAEb1D,QAAQnC,MAAM6F,EAAAa,GAAMC,SAAQ,yBAAAd,EAAAe,OAAA,GAAAlB,EAAA,mBAE/B,gBAvBamB,GAAA,OAAAxH,EAAAyH,MAAA,KAAAC,UAAA,KAwBd,OACE3G,EAAAA,EAAAA,MAAA,OAAKP,UAAWmD,EAAS7C,SAAA,EACvBR,EAAAA,EAAAA,KAACqH,EAAAA,EAAc,CACbzH,MAAO4F,EACP7F,UAAW0D,EACXvD,MAAM,QACNC,SAAS,0BACTF,QAnCU,WACd4F,GAASrE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGoE,GAAM,IAAEnF,OAAO,IAC/B,KAmCIL,EAAAA,EAAAA,KAACsH,EAAAA,EAAU,CACTpH,UAAWmD,EACXiB,MAAM,UACNC,QAAQ,KAAI/D,SAAC,aACfR,EAAAA,EAAAA,KAACuH,EAAU,CAAC5D,SAAUA,EAAU/D,MAAO4F,MAG7C,C,qBC3DA,KAAgB,IAAM,0B","sources":["components/UserErrorSlide.jsx","components/forms/UserField.jsx","components/forms/validateSignIn.js","webpack://client/./src/components/signInForm.module.css?174f","components/GoogleButton/GoogleButtonSignIn.js","components/forms/SignInForm.jsx","webpack://client/./src/layout/page/signIn.module.css?06fd","layout/page/SignInPage.jsx","webpack://client/./src/components/GoogleButton/googleButton.module.css?417c"],"sourcesContent":["import React from 'react';\nimport {Alert, AlertTitle, Slide} from \"@mui/material\";\n\nconst UserErrorSlide = ({classname, state, onClose, title, subTitle}) => {\n  return (\n    <Slide className={classname} direction=\"down\" in={state.error} mountOnEnter unmountOnExit>\n      <Alert\n        severity=\"error\"\n        onClose={onClose}>\n        <AlertTitle>\n          {title}\n        </AlertTitle>\n        {subTitle}\n      </Alert>\n    </Slide>\n  );\n};\n\nexport default UserErrorSlide;\n","import React from 'react';\nimport {TextField} from \"@mui/material\";\n\nconst UserField = React.memo((props) => {\n  const {label, name, formik} = props\n  return (\n    <TextField\n      {...props}\n      label={label}\n      name={name}\n      value={formik.values[name]}\n      onChange={formik.handleChange}\n      onBlur={formik.handleBlur}\n      error={formik.touched[name] && !!formik.errors[name]}\n      helperText={formik.touched[name] && formik.errors[name]}\n      margin=\"normal\"\n    />\n\n  )\n});\n\nexport default UserField;\n","import * as yup from \"yup\";\n\nexport default yup.object({\n\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(2, 'Пароль должен содержать минимум 8 символов')\n    .matches(/[a-zA-Z]/, 'Пароль должен содержать хотя бы одну букву')\n    .matches(/[0-9]/, 'Пароль должен содержать хотя бы одну цифру')\n    .required('Пароль обязателен для заполнения'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"signInForm_formContainer__U2I0b\"};","import React, {useEffect} from 'react';\nimport {GoogleLogin} from \"react-google-login\";\nimport {gapi} from \"gapi-script\"\nimport st from \"./googleButton.module.css\"\nconst GoogleButtonSignIn = (props) => {\n  const clientId = \"759255864066-k5undthpvb18m3fb8g6qmr80l65bvl95.apps.googleusercontent.com\"\n  const responseGoogle = (response) => {\n    console.log(response.profileObj);\n    const {email, imageUrl} =response.profileObj\n    props.setValuesFormik(email, imageUrl)\n  };\n\n  useEffect(()=> {\n    gapi.load(\"client:auth2\", () => {\n      gapi.client.init({\n        clientId: clientId,\n        scope: ''\n      })\n    })\n  })\n  // const accessToken = gapi.auth.getToken().access_token\n  return (\n    <GoogleLogin\n      className={st.btn}\n      clientId={clientId}\n      buttonText={props.title}\n      onSuccess={responseGoogle}\n      onFailure={responseGoogle}\n      cookiePolicy={'single_host_origin'}\n    />\n  );\n};\n\nexport default GoogleButtonSignIn;\n","import React from 'react';\nimport {useFormik} from 'formik';\nimport {Button, CircularProgress} from \"@mui/material\";\nimport UserField from \"./UserField\";\nimport validateSignIn from \"./validateSignIn\";\nimport st from \"../signInForm.module.css\"\nimport GoogleButtonSignIn from \"../GoogleButton/GoogleButtonSignIn\";\n\nconst SignInForm = ({onSubmit, state}) => {\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: validateSignIn,\n    onSubmit: onSubmit,\n  });\n  const setValuesFormik = (email) => {\n    formik.initialValues.email = email\n    formik.validateField()\n\n  }\n\n  return (\n    <form className={st.formContainer} onSubmit={formik.handleSubmit}>\n      <UserField\n        name=\"email\"\n        label=\"Email\"\n        formik={formik}\n        fullWidth\n      />\n      <UserField\n        name=\"password\"\n        label=\"Password\"\n        formik={formik}\n        type=\"password\"\n        fullWidth\n      />\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        fullWidth\n        style={{margin: '20px 0 10px'}}\n        type=\"submit\"\n        disabled={state.loading}\n        endIcon={\n          state.loading\n            ? <CircularProgress\n              color=\"inherit\" size='18px' style={{padding: \"0px 10px\"}}/>\n            : null}\n\n      >\n        Submit\n      </Button>\n\n      <GoogleButtonSignIn setValuesFormik={setValuesFormik} title={\"Sign in with Google\"}/>\n\n    </form>\n  );\n};\n\nexport default SignInForm\n","// extracted by mini-css-extract-plugin\nexport default {\"pages\":\"signIn_pages__1RVGk\",\"title\":\"signIn_title__0sPS6\",\"alert\":\"signIn_alert__9zsod\"};","import React, {useState} from 'react';\nimport SignInForm from \"../../components/forms/SignInForm\";\nimport st from \"./signIn.module.css\"\nimport {Typography} from \"@mui/material\";\nimport {useNavigate} from \"react-router-dom\";\nimport UserErrorSlide from \"../../components/UserErrorSlide\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {update} from \"../../features/profile/profileSlice\";\n\nconst SignInPage = () => {\n  const dispatch = useDispatch()\n  const [status, setStatus] = useState({\n    error: false,\n    loading: false,\n    gone: false\n  })\n  const onClose = () => {\n    setStatus({...status, error: false})\n  }\n  const navigate = useNavigate();\n  const onSubmit = async (values) => {\n    try {\n      console.log(values)\n      setStatus({...status, loading: true})\n      const response = await fetch(\"/api/auth/signin\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify(values)\n      })\n      const data = await response.json()\n      console.log(data)\n      setStatus({...status, loading: false})\n      if (data.error) {\n        setStatus({...status, error: data.error})\n        return\n      }\n      dispatch(update(data))\n      navigate(\"/\")\n    } catch (error) {\n      console.error(error.message)\n    }\n  }\n  return (\n    <div className={st.pages}>\n      <UserErrorSlide\n        state={status}\n        classname={st.alert}\n        title=\"Error\"\n        subTitle=\"Wrote email or password\"\n        onClose={onClose}\n      />\n      <Typography\n        className={st.title}\n        color='primary'\n        variant='h2'>SIGN UP</Typography>\n      <SignInForm onSubmit={onSubmit} state={status}/>\n    </div>\n  );\n};\n\nexport default SignInPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"googleButton_btn__Qg7Ae\"};"],"names":["_ref","classname","state","onClose","title","subTitle","_jsx","Slide","className","direction","in","error","mountOnEnter","unmountOnExit","children","_jsxs","Alert","severity","AlertTitle","UserField","React","props","label","name","formik","TextField","_objectSpread","value","values","onChange","handleChange","onBlur","handleBlur","touched","errors","helperText","margin","yup","email","required","password","min","matches","clientId","responseGoogle","response","console","log","profileObj","_response$profileObj","imageUrl","setValuesFormik","useEffect","gapi","load","client","init","scope","GoogleLogin","st","btn","buttonText","onSuccess","onFailure","cookiePolicy","onSubmit","useFormik","initialValues","validateOnBlur","validateOnChange","validationSchema","validateSignIn","handleSubmit","fullWidth","type","Button","color","variant","style","disabled","loading","endIcon","CircularProgress","size","padding","GoogleButtonSignIn","validateField","dispatch","useDispatch","_useState","useState","gone","_useState2","_slicedToArray","status","setStatus","navigate","useNavigate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","fetch","method","headers","body","JSON","stringify","sent","json","abrupt","update","t0","message","stop","_x","apply","arguments","UserErrorSlide","Typography","SignInForm"],"sourceRoot":""}